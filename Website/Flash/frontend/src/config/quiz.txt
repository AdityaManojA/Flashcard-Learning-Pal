    {
      question: '1. What is the result of 5 * 3?',
      options: ['8', '15', '53', 'Error'],
      correctAnswer: '15'
    },
    {
      question: '2. What will the following code output?\n\nfruits = ["apple", "banana", "cherry"]\nprint(fruits[-1])',
      options: ['banana', 'apple', 'cherry', 'IndexError'],
      correctAnswer: 'cherry'
    },
    {
      question: '3. What is the correct way to declare a tuple in Python?',
      options: ['(1, 2, 3)', '[1, 2, 3]', '{1, 2, 3}', '<1, 2, 3>'],
      correctAnswer: '(1, 2, 3)'
    },
    {
      question: '4. What will be the output of the following code snippet?\n\nx = "python"\nprint(len(x))',
      options: ['5', '6', '7', 'Error'],
      correctAnswer: '6'
    },
    {
      question: '5. Which of the following is a correct way to comment multiple lines in Python?',
      options: ['# Comment', '/* Comment */', '// Comment', '"""""" Comment """"""'],
      correctAnswer: '"""""" Comment """"""'
    },
    {
      question: '6. What will the following code output?\n\nx = 10\ny = 5\nprint(x % y)',
      options: ['2', '0', '1', 'Error'],
      correctAnswer: '0'
    },
    {
      question: '7. What will be the output of the following code snippet?\n\nx = "hello"\nprint(x[1:3])',
      options: ['h', 'e', 'el', 'Error'],
      correctAnswer: 'el'
    },
    {
      question: '8. What is the result of the expression (10 + 3) / 2?',
      options: ['6', '6.5', '7', 'Error'],
      correctAnswer: '6.5'
    },
    {
      question: '9. Which of the following is used to generate random numbers in Python?',
      options: ['rand()', 'random.randint()', 'randomNumber()', 'randomNum()'],
      correctAnswer: 'random.randint()'
    },
    {
      question: '10. What will be the output of the following code snippet?\n\nx = [1, 2, 3]\nx.append(4)\nprint(x)',
      options: ['[1, 2, 3, 4]', '[1, 2, 3]', '[1, 2, 3, [4]]', 'Error'],
      correctAnswer: '[1, 2, 3, 4]'
    },
    {
      question: '11. What is the output of the following code snippet?\n\nx = "Hello"\nprint(x.lower())',
      options: ['hello', 'HELLO', 'hELLO', 'Error'],
      correctAnswer: 'hello'
    },
    {
      question: '12. What will the following code output?\n\nx = [1, 2, 3, 4]\nprint(x[-2])',
      options: ['3', '4', '2', 'Error'],
      correctAnswer: '3'
    },
    {
      question: '13. What is the correct way to check if a key exists in a dictionary in Python?',
      options: ['key.exists()', 'exists(key)', 'key in dict', 'key.exists(dict)'],
      correctAnswer: 'key in dict'
    },
    {
      question: '14. What will the following code output?\n\nx = 10\ny = "20"\nprint(x + int(y))',
      options: ['30', '1020', 'Error', '102'],
      correctAnswer: '30'
    },
    {
      question: '15. Which of the following is used to format strings in Python?',
      options: ['format()', 'printf()', 'String.format()', 'formatString()'],
      correctAnswer: 'format()'
    },





    moderatejs

        {
      question: '1. What does the `let` keyword do in JavaScript?',
      options: ['Declares a block-scoped variable', 'Declares a global variable', 'Declares a constant variable', 'Declares a function'],
      correctAnswer: 'Declares a block-scoped variable'
    },
    {
      question: '2. How do you declare a function expression in JavaScript?',
      options: ['function myFunction() {}', 'myFunction = function() {}', 'const myFunction = function() {}', 'let myFunction = function() {}'],
      correctAnswer: 'const myFunction = function() {}'
    },
    {
      question: '3. What is the purpose of the `this` keyword in JavaScript?',
      options: ['Refers to the current object', 'Refers to the parent object', 'Refers to the global object', 'Refers to the child object'],
      correctAnswer: 'Refers to the current object'
    },
    {
      question: '4. What is the result of `console.log("5" - 3)`?',
      options: ['2', '8', '53', 'Error'],
      correctAnswer: '2'
    },
    {
      question: '5. Which method is used to add elements to the end of an array in JavaScript?',
      options: ['push()', 'pop()', 'shift()', 'unshift()'],
      correctAnswer: 'push()'
    },
    {
      question: '6. What does the `typeof` operator return for an array in JavaScript?',
      options: ['array', 'object', 'array', 'string'],
      correctAnswer: 'object'
    },
    {
      question: '7. How do you check if a variable is an array in JavaScript?',
      options: ['typeof', 'isArray()', 'instanceof', 'isArray'],
      correctAnswer: 'Array.isArray()'
    },
    {
      question: '8. What is the result of `console.log(NaN === NaN)`?',
      options: ['true', 'false', 'Error', 'null'],
      correctAnswer: 'false'
    },
    {
      question: '9. What does the `!==` operator do in JavaScript?',
      options: ['Not equal value or not equal type', 'Equal value and equal type', 'Not equal value but equal type', 'Equal value but not equal type'],
      correctAnswer: 'Not equal value or not equal type'
    },
    {
      question: '10. What is the result of `console.log(Boolean("false"))`?',
      options: ['true', 'false', 'Error', 'null'],
      correctAnswer: 'true'
    },
    {
      question: '11. How do you convert a string to uppercase in JavaScript?',
      options: ['toUpperCase()', 'toUppercase()', 'toUpperCaseCase()', 'upperCase()'],
      correctAnswer: 'toUpperCase()'
    },
    {
      question: '12. What is the output of `console.log(Math.floor(3.9))`?',
      options: ['3', '4', '3.9', 'Error'],
      correctAnswer: '3'
    },
    {
      question: '13. What does the `concat()` method do in JavaScript?',
      options: ['Joins two or more arrays', 'Returns the first element of an array', 'Sorts the elements of an array', 'Returns a new array with elements added to it'],
      correctAnswer: 'Joins two or more arrays'
    },
    {
      question: '14. What is the result of `console.log(parseInt("10px"))`?',
      options: ['10', 'NaN', 'Error', 'null'],
      correctAnswer: '10'
    },
    {
      question: '15. Which event is triggered when the user scrolls in JavaScript?',
      options: ['scroll', 'scrollEvent', 'scrolling', 'onScroll'],
      correctAnswer: 'scroll'
    },


    import { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom'; // Import useNavigate
import { auth } from '../config/firebase'; 
import { signInWithEmailAndPassword } from 'firebase/auth';

export const Auth = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [loginClicked, setLoginClicked] = useState(false);
  const [error, setError] = useState("");
  const navigate = useNavigate(); // Replace useHistory with useNavigate

  const handleEmailChange = (e) => {
    setEmail(e.target.value);
  };

  const handlePasswordChange = (e) => {
    setPassword(e.target.value);
  };

  const signIn = async () => {
    setLoginClicked(true);
    if (!email.trim() || !password.trim()) {
      setError("Please fill all the fields.");
      setTimeout(() => setError(""), 2000); 
      return; 
    }
    try {
      const userCredential = await signInWithEmailAndPassword(auth, email, password);
      const userId = userCredential.user.uid; // Extract the user ID
      // Optionally, you can store the user ID in localStorage or session storage for future use
      localStorage.setItem('userId', userId);
      // Redirect to the home page
      navigate("/home"); // Use navigate function instead of history.push
    } catch (err) {
      console.error("Sign-in error:", err);
      setError("Invalid email or password.");
      setTimeout(() => setError(""), 2000);
    }
  };

  return (
    <div className="background">
      <div className="shape"></div>
      <div className="shape"></div>
      <form>
        <h3>Sign up to FCP !</h3>

        <label htmlFor="username">Enter your Email</label>
        <input type="text" placeholder="Email" value={email} onChange={handleEmailChange} />

        <label htmlFor="password">Enter your Password</label>
        <input type="password" placeholder="Password" value={password} onChange={handlePasswordChange} />
        
        <button type="button" className="login-button" onClick={signIn}>
          <Link to='/login' className="login">Sign up</Link>
        </button>

        {loginClicked && (!email.trim() || !password.trim()) && (
          <p style={{ color: 'red' }}>Please fill all the fields.</p>
        )}

        <div className="signup-link">
          <p>Already have an account? <Link to="/login">Login</Link></p>
        </div>
      </form>
    </div>
  );
};

export default Auth;
